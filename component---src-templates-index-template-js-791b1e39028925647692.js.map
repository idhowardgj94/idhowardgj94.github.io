{"version":3,"sources":["webpack:///./src/components/pagination.js","webpack:///./src/templates/index-template.js","webpack:///./node_modules/classnames/index.js"],"names":["Pagination","prevPagePath","nextPagePath","hasNextPage","hasPrevPage","prevClassName","cx","nextClassName","className","rel","to","PAGINATION","PREV_PAGE","NEXT_PAGE","BlogIndex","data","location","pageContext","siteTitle","site","siteMetadata","title","edges","allMarkdownRemark","currentPage","currentPageInfo","length","map","edge","node","frontmatter","fields","slug","tags","key","itemProp","tag","css","date","hasOwn","hasOwnProperty","classNames","classes","i","arguments","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","call","join","module","exports","default"],"mappings":";4NAkCeA,EA5BI,SAAC,GAKb,IAJLC,EAII,EAJJA,aACAC,EAGI,EAHJA,aACAC,EAEI,EAFJA,YACAC,EACI,EADJA,YAEMC,EAAgBC,IAAG,CACvB,yBAAyB,EACzB,kCAAmCF,IAG/BG,EAAgBD,IAAG,CACvB,yBAAyB,EACzB,kCAAmCH,IAGrC,OACE,yBAAKK,UAAW,cACd,yBAAKA,UAAW,oBACd,kBAAC,OAAD,CAAMC,IAAI,OAAOC,GAAIN,EAAcH,EAAe,IAAKO,UAAWH,GAAgBM,IAAWC,YAE/F,yBAAKJ,UAAW,oBACd,kBAAC,OAAD,CAAMC,IAAI,OAAOC,GAAIP,EAAcD,EAAe,IAAKM,UAAWD,GAAgBI,IAAWE,c,YC+CtFC,UAlEG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC7BC,EAAYH,EAAKI,KAAKC,aAAaC,MACjCC,EAAUP,EAAKQ,kBAAfD,MAENE,EAKEP,EALFO,YACArB,EAIEc,EAJFd,YACAC,EAGEa,EAHFb,YACAH,EAEEgB,EAFFhB,aACAC,EACEe,EADFf,aAEIuB,EAAkBD,EAAc,EAAd,QAA0BA,EAAgB,GAElE,OAAqB,IAAjBF,EAAMI,OAEN,YAAC,IAAD,CAAQV,SAAUA,EAAUK,MAAOH,GACjC,YAAC,IAAD,CAAKG,MAAOH,IACZ,YAAC,IAAD,MACA,mLAUJ,YAAC,IAAD,CAAQF,SAAUA,EAAUK,MAAOH,GACjC,YAAC,IAAD,CAAKG,MAAOH,IACZ,kBAAIV,UAAU,aACXc,EAAMK,KAAI,SAAAC,GACT,IAAMP,EAAQO,EAAKC,KAAKC,YAAYT,OAASO,EAAKC,KAAKE,OAAOC,KACxDC,EAAOL,EAAKC,KAAKC,YAAYG,KACnC,OACE,kBAAIC,IAAKN,EAAKC,KAAKE,OAAOC,KAAMxB,UAAU,kBACxC,YAAC,OAAD,CAAME,GAAIkB,EAAKC,KAAKE,OAAOC,KAAMG,SAAS,MAAM3B,UAAU,SACxD,oBAAM2B,SAAS,YAAYd,IAE3BY,EAAKN,KAAI,SAAAS,GAAG,OACX,oBAAMC,IAAKA,YAAF,6TAAT,IAQKD,EARL,QAWH,qBAAO5B,UAAU,QAAQoB,EAAKC,KAAKC,YAAYQ,WAKvD,mBAAK9B,UAAU,qBAAqBiB,GACpC,YAAC,EAAD,CACExB,aAAcA,EACdC,aAAcA,EACdE,YAAaA,EACbD,YAAaA,O,qBCrErB,OAOA,WACE,aAEA,IAAIoC,EAAS,GAAGC,eAEhB,SAASC,IAGP,IAFA,IAAIC,EAAU,GAELC,EAAI,EAAGA,EAAIC,UAAUlB,OAAQiB,IAAK,CACzC,IAAIE,EAAMD,UAAUD,GACpB,GAAKE,EAAL,CACA,IAAIC,SAAiBD,EAErB,GAAgB,WAAZC,GAAoC,WAAZA,EAC1BJ,EAAQK,KAAKF,QACR,GAAIG,MAAMC,QAAQJ,IACvB,GAAIA,EAAInB,OAAQ,CACd,IAAIwB,EAAQT,EAAWU,MAAM,KAAMN,GAE/BK,GACFR,EAAQK,KAAKG,SAGZ,GAAgB,WAAZJ,EACT,GAAID,EAAIO,WAAaC,OAAOC,UAAUF,SACpC,IAAK,IAAIlB,KAAOW,EACVN,EAAOgB,KAAKV,EAAKX,IAAQW,EAAIX,IAC/BQ,EAAQK,KAAKb,QAIjBQ,EAAQK,KAAKF,EAAIO,aAKvB,OAAOV,EAAQc,KAAK,KAGeC,EAAOC,SAC1CjB,EAAWkB,QAAUlB,EACrBgB,EAAOC,QAAUjB,QAKhB,KAFwB,EAAF,WACrB,OAAOA,GACR,QAFoB,OAEpB,aA9CL","file":"component---src-templates-index-template-js-791b1e39028925647692.js","sourcesContent":["// @flow strict\nimport React from 'react';\nimport cx from 'classnames';\nimport { Link } from 'gatsby';\nimport { PAGINATION } from '../constants';\n\nconst Pagination = ({\n  prevPagePath,\n  nextPagePath,\n  hasNextPage,\n  hasPrevPage\n}) => {\n  const prevClassName = cx({\n    'pagination__prev-link': true,\n    'pagination__prev-link--disable': !hasPrevPage\n  });\n\n  const nextClassName = cx({\n    'pagination__next-link': true,\n    'pagination__next-link--disable': !hasNextPage\n  });\n\n  return (\n    <div className={'pagination'}>\n      <div className={'pagination__prev'}>\n        <Link rel=\"prev\" to={hasPrevPage ? prevPagePath : '/'} className={prevClassName}>{PAGINATION.PREV_PAGE}</Link>\n      </div>\n      <div className={'pagination__next'}>\n        <Link rel=\"next\" to={hasNextPage ? nextPagePath : '/'} className={nextClassName}>{PAGINATION.NEXT_PAGE}</Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Pagination;\n","import React from \"react\";\nimport { Link, graphql } from \"gatsby\";\n\nimport Bio from \"../components/bio\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Pagination from \"../components/pagination\";\n/** @jsx jsx */\nimport { css, jsx } from '@emotion/react'\nconst BlogIndex = ({ data, location, pageContext }) => {\n  const siteTitle = data.site.siteMetadata.title;\n  const { edges } = data.allMarkdownRemark;\n  const {\n    currentPage,\n    hasNextPage,\n    hasPrevPage,\n    prevPagePath,\n    nextPagePath\n  } = pageContext;\n  const currentPageInfo = currentPage > 0 ? `Page ${currentPage}` : '';\n\n  if (edges.length === 0) {\n    return (\n      <Layout location={location} title={siteTitle}>\n        <SEO title={siteTitle} />\n        <Bio />\n        <p>\n          No blog posts found. Add markdown posts to \"content/blog\" (or the\n          directory you specified for the \"gatsby-source-filesystem\" plugin in\n          gatsby-config.js).\n        </p>\n      </Layout>\n    )\n  }\n\n  return (\n    <Layout location={location} title={siteTitle}>\n      <SEO title={siteTitle} />\n      <ol className=\"blog-list\">\n        {edges.map(edge => {\n          const title = edge.node.frontmatter.title || edge.node.fields.slug\n          const tags = edge.node.frontmatter.tags\n          return (\n            <li key={edge.node.fields.slug} className=\"blog-list-item\">\n              <Link to={edge.node.fields.slug} itemProp=\"url\" className=\"title\">\n                <span itemProp=\"headline\">{title}</span>\n              </Link>\n              { tags.map(tag => (\n                 <span css={css`\n                 font-size: 0.8rem;\n                 color: whitesmoke;\n                 border-width: 1px 1px;\n                 border-style: solid;\n                 padding: 0 10px;\n                 background-color: green;\n                 border-radius: 1rem;\n                 `}> {tag} </span>\n              )) }\n             \n              <small className=\"date\">{edge.node.frontmatter.date}</small>\n            </li>\n          )\n        })}\n      </ol>\n      <div className=\"current-page-info\">{currentPageInfo}</div>\n      <Pagination\n        prevPagePath={prevPagePath}\n        nextPagePath={nextPagePath}\n        hasPrevPage={hasPrevPage}\n        hasNextPage={hasNextPage}\n      />\n    </Layout>\n  )\n}\n\nexport default BlogIndex\n\nexport const query = graphql`\n  query IndexTemplate($postsLimit: Int!, $postsOffset: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: $postsLimit,\n      skip: $postsOffset,\n      filter: { frontmatter: { template: { eq: \"post\" } } },\n      sort: { order: DESC, fields: [frontmatter___date] }\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            tags\n          }\n        }\n      }\n    }\n  }\n`\n","/*!\n  Copyright (c) 2018 Jed Watson.\n  Licensed under the MIT License (MIT), see\n  http://jedwatson.github.io/classnames\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        if (arg.length) {\n          var inner = classNames.apply(null, arg);\n\n          if (inner) {\n            classes.push(inner);\n          }\n        }\n      } else if (argType === 'object') {\n        if (arg.toString === Object.prototype.toString) {\n          for (var key in arg) {\n            if (hasOwn.call(arg, key) && arg[key]) {\n              classes.push(key);\n            }\n          }\n        } else {\n          classes.push(arg.toString());\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    classNames.default = classNames;\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();"],"sourceRoot":""}